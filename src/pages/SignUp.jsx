import React, { Component } from 'react';
import axios from 'axios';

export default class SignUp extends Component {
    constructor() {
        super()
        this.state = 
        {
                email:'',
                first_name: '',
                last_name: '',
                password1: '',
                password2: ''

        }
    }
        
    

    onChangeEmail=e=>{
        this.setState({ email: e.target.value })
    }

    onChangePassword1=e=> {
        this.setState({ password1: e.target.value })
    }

    onChangePassword2=e=> {
        this.setState({ password2: e.target.value })
    }

    onChangeFname=e=>{
        this.setState({ first_name: e.target.value })
    }

    onChangeLname=e=>{
        this.setState({ last_name: e.target.value })
    }

    onSubmit=e=>{
        e.preventDefault()

        const user = {
            email: this.state.email,
            password1: this.state.password1,
            password2: this.state.password2,
            first_name: this.state.first_name,
            last_name: this.state.last_name
        };

        axios.post('http://localhost:8000/maller/auth/signup', {user})
            .then((res) => {
                console.log(res.data)
            }).catch((error) => {
                console.log(error)
            });

        this.setState({password1: '', password2:'', email:'',
         first_name:'', last_name:''})
    }


    render() {
        return (
            
            <div className='loginpage'>
                <form onSubmit={this.onSubmit}>
            <div className="loginitem">
                <div className='loginsvg'>
                <svg width="270" height="50" viewBox="0 0 270 112" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M0 33.3916H9.55392V84.7542H36.4244V94.3101H0V33.3916Z" fill="black"/>
<path d="M39.4844 71.084C39.3281 66.1469 40.4207 61.2671 42.6217 57.0716C44.8228 52.8761 48.0317 49.5566 51.8364 47.5394C55.641 45.5223 59.8675 44.8998 63.9729 45.7518C68.0783 46.6038 71.875 48.8914 74.8752 52.3207C77.8755 55.7501 79.9424 60.1645 80.8101 64.9969C81.6779 69.8292 81.3069 74.8588 79.745 79.4394C78.1831 84.0199 75.5015 87.9423 72.0448 90.7025C68.5881 93.4627 64.5141 94.9347 60.3463 94.9294C57.6293 95.113 54.9097 94.6288 52.3582 93.5071C49.8066 92.3854 47.4782 90.6506 45.5192 88.4114C43.5602 86.1722 42.0129 83.4771 40.9744 80.4953C39.9359 77.5135 39.4286 74.3093 39.4844 71.084ZM72.0275 71.084C71.9036 68.3929 71.1178 65.8036 69.767 63.6357C68.4162 61.4678 66.5595 59.8161 64.4261 58.8844C62.2927 57.9527 59.9759 57.7818 57.7615 58.3927C55.5471 59.0036 53.5321 60.3697 51.9649 62.3224C50.3978 64.275 49.3472 66.7288 48.9428 69.381C48.5383 72.0331 48.7978 74.7676 49.6891 77.2471C50.5803 79.7265 52.0644 81.8424 53.9582 83.3337C55.852 84.825 58.0727 85.6263 60.3463 85.639C61.9444 85.6946 63.5345 85.3506 65.013 84.6292C66.4915 83.9078 67.8252 82.8252 68.9273 81.4521C70.0293 80.0789 70.8749 78.446 71.4091 76.6596C71.9432 74.8732 72.154 72.9734 72.0275 71.084Z" fill="black"/>
<path d="M128.978 47.858V87.0989C128.978 103.954 121.514 111.652 107.818 111.652C101.021 111.96 94.3251 109.63 88.7473 105.016L92.8525 96.8317C97.0293 100.53 102.12 102.49 107.333 102.406C115.991 102.406 119.798 97.7165 119.798 88.2934V85.8602C118.101 87.9344 116.054 89.5589 113.789 90.6265C111.525 91.694 109.095 92.1805 106.661 92.0538C104.103 92.1884 101.548 91.7075 99.1516 90.6399C96.7547 89.5723 94.5651 87.9402 92.7149 85.8421C90.8647 83.744 89.3921 81.2233 88.3861 78.4322C87.3801 75.641 86.8613 72.6372 86.8613 69.602C86.8613 66.5667 87.3801 63.563 88.3861 60.7718C89.3921 57.9807 90.8647 55.46 92.7149 53.3619C94.5651 51.2638 96.7547 49.6317 99.1516 48.5641C101.548 47.4965 104.103 47.0156 106.661 47.1502C109.206 46.9876 111.749 47.5078 114.101 48.6721C116.453 49.8364 118.554 51.6147 120.245 53.8747V47.6811L128.978 47.858ZM119.947 69.7126C120.096 66.8798 119.524 64.0591 118.305 61.6165C117.085 59.174 115.274 57.2225 113.107 56.0153C110.94 54.8081 108.517 54.4009 106.152 54.8467C103.787 55.2924 101.59 56.5705 99.8462 58.515C98.102 60.4595 96.8912 62.9807 96.3708 65.7512C95.8505 68.5217 96.0447 71.4137 96.9282 74.0518C97.8118 76.6898 99.3438 78.9521 101.326 80.545C103.307 82.138 105.647 82.9879 108.042 82.9846C109.571 83.0996 111.103 82.8415 112.544 82.2262C113.986 81.6109 115.305 80.6516 116.421 79.4075C117.537 78.1634 118.426 76.6611 119.032 74.9935C119.639 73.3259 119.95 71.5285 119.947 69.7126Z" fill="black"/>
<path d="M139.764 33.6571C139.778 32.7702 139.942 31.8957 140.246 31.0852C140.55 30.2747 140.988 29.5448 141.535 28.9385C142.081 28.3322 142.724 27.8619 143.426 27.5554C144.128 27.2488 144.875 27.1123 145.623 27.1538C146.359 27.0878 147.098 27.1983 147.797 27.4788C148.496 27.7593 149.14 28.2041 149.69 28.7864C150.241 29.3688 150.686 30.0768 151.001 30.8681C151.315 31.6594 151.491 32.5177 151.519 33.3917C151.433 35.1492 150.79 36.8032 149.72 38.0234C148.649 39.2436 147.23 39.9401 145.745 39.9736C144.26 40.0071 142.82 39.3753 141.711 38.2043C140.602 37.0333 139.906 35.4094 139.764 33.6571ZM140.995 47.8582H150.176V94.3102H140.995V47.8582Z" fill="black"/>
<path d="M200.819 67.6776V94.2216H191.638V69.0049C191.638 60.732 188.205 56.7504 182.346 56.7504C175.815 56.7504 171.373 61.4398 171.373 70.7302V94.2216H162.23V47.8581H170.963V53.8748C172.656 51.6484 174.748 49.9005 177.086 48.7597C179.424 47.6189 181.948 47.1143 184.473 47.283C193.84 47.283 200.819 53.6978 200.819 67.6776Z" fill="black"/>
<path d="M267.436 2.0255C268.652 4.71587 269.401 7.66815 269.638 10.7077C269.876 13.7472 269.596 16.8123 268.816 19.7215C267.195 25.6049 264.449 30.9646 260.793 35.3825C253.313 43.9464 244.076 50.0464 233.997 53.0785C231.534 40.2489 237.505 26.5345 240.901 20.0755C246.238 9.59056 261.315 -5.4953 267.398 2.0255" fill="#3B828B"/>
<path d="M232.205 75.5525C233.429 72.4051 235.341 69.7034 237.743 67.7275C240.145 65.7516 242.949 64.5735 245.864 64.3155C248.748 64.0975 251.64 64.5558 254.375 65.6641C257.109 66.7725 259.632 68.509 261.8 70.7745C262.867 71.7076 263.752 72.9014 264.396 74.2753C265.04 75.6492 265.427 77.171 265.532 78.7377C265.415 80.2126 264.974 81.6254 264.254 82.8361C263.534 84.0467 262.559 85.013 261.427 85.6392C259.072 86.8171 256.502 87.2589 253.963 86.9221C245.416 86.1701 237.281 83.6484 232.13 75.5525" fill="#3B828B"/>
<path d="M210.671 90.5939C212.077 88.5781 213.666 86.7531 215.411 85.1524C217.25 83.3133 219.267 81.7392 221.42 80.463C224.006 78.7721 226.686 77.294 229.443 76.039C234.499 73.779 239.947 73.0343 245.304 73.8712C246.913 74.1492 248.49 74.6388 250.007 75.3311C250.584 75.5445 251.127 75.8737 251.611 76.3044C251.611 76.3044 249.186 75.3311 245.192 74.8003C239.976 74.2686 234.724 75.1147 229.817 77.2777C227.117 78.4901 224.475 79.8784 221.905 81.4363C219.773 82.6493 217.758 84.1326 215.896 85.8603C214.248 87.5778 212.502 89.1594 210.671 90.5939V90.5939Z" fill="#263238"/>
<path d="M256.836 14.7224C256.341 15.9241 255.767 17.0779 255.119 18.1731C253.962 20.2966 252.283 23.3934 250.156 27.0211C245.901 34.5862 239.893 44.9383 233.063 56.2195C226.234 67.5007 219.74 77.499 214.963 84.6216C212.575 88.2051 210.597 91.0364 209.216 92.983C208.536 94.025 207.787 95.0014 206.977 95.9028C207.518 94.7531 208.155 93.6711 208.88 92.6733L214.329 83.8253C218.956 76.5699 225.301 66.5275 232.13 55.2463L249.596 26.6672L254.895 17.8192C255.466 16.7227 256.115 15.6866 256.836 14.7224V14.7224Z" fill="#263238"/>
<path d="M219.74 70.3763C221.695 63.5255 222.247 56.222 221.352 49.0683C220.456 41.9146 218.139 35.1159 214.59 29.2331C212.761 26.269 209.962 23.3049 207.126 24.1897C204.29 25.0745 202.797 29.2773 202.424 33.0377C201.737 40.6766 202.977 48.3853 205.986 55.1889C208.995 61.9926 213.639 67.5857 219.33 71.2611" fill="#3B828B"/>
<path d="M212.276 39.5852C212.276 39.5852 212.687 40.1603 213.284 41.3106C213.881 42.4608 214.627 44.1419 215.523 46.3097C217.845 51.9557 219.274 58.0584 219.74 64.3153C219.933 67.7959 219.656 71.2907 218.919 74.6675C218.287 77.4922 217.306 80.1905 216.008 82.6749C215.175 84.2466 214.226 85.7271 213.172 87.0989C212.811 87.6409 212.397 88.1309 211.94 88.5589C211.754 88.5589 213.396 86.1257 215.336 82.0113C216.43 79.6061 217.27 77.0504 217.837 74.4021C218.498 71.146 218.738 67.7895 218.546 64.4481C218.027 58.3381 216.692 52.3648 214.59 46.7521C213.718 44.4104 212.946 42.0185 212.276 39.5852V39.5852Z" fill="#263238"/>
</svg>

                </div>
                <div placeholder='example@example.com' className='email1'>Email Address</div>
                <input placeholder="example@example.com" className="email"  value={this.state.email} onChange={this.onChangeEmail}  type="email"/>
                <div placeholder='enter password' className='pass1'>Password</div>
                <input placeholder="Enter password" className="pass"  value={this.state.password1} onChange={this.onChangePassword1} type="password"/>
                <div placeholder='enter password' className='pass1'>RE-Password</div>
                <input placeholder="RE-Enter password" className="pass"  value={this.state.password2} onChange={this.onChangePassword2} type="password"/>
                <div  className='pass1'>first name</div>
                <input placeholder="first name" className="pass"  value={this.state.first_name} onChange={this.onChangeFname} type="text"/>
                <div  className='pass1'>last name</div>
                <input placeholder="last name" className="pass"  value={this.state.last_name} onChange={this.onChangeLname} type="text"/>

            </div>
            <p><button className='loginb' type="submit">Sign Up</button></p>
            <a href='#' className='signb'>Login</a>
            </form>
        </div>


        )
    }
}
